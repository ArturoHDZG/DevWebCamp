{"version":3,"sources":["horarios.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenHora","terminoBusqueda","e","target","name","value","async","url","resultado","fetch","eventos","map","evento","hora_id","forEach","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","horaPrevia","classList","remove","add","dataset","horaId","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminarTag","appendChild","actualizarInputHidden","filter","toString","split","keyCode","trim","preventDefault"],"mappings":"AAAA,cAEA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,IAAAC,EAAA,CACAC,aAAA,GACAC,IAAA,IAGA,MAAAC,EAAAL,SAAAC,cAAA,yBACAK,EAAAN,SAAAO,iBAAA,gBAEAC,GADAR,SAAAC,cAAA,mBACAD,SAAAC,cAAA,qBAKA,SAAAQ,EAAAC,GACAR,EAAAQ,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MAIAC,iBACA,MAAAX,aAAAA,EAAAC,IAAAA,GAAAF,EACAa,EAAA,qCAAAZ,YAAAC,IACAY,QAAAC,MAAAF,IAMA,SAAAG,GAEAA,EAAAC,IAAAC,GAAAA,EAAAC,SACArB,SAAAO,iBAAA,aACAP,SAAAO,iBAAA,aACAe,QAAAC,GAAAA,EAAAC,iBAAA,QAAAC,IARAC,OAFAV,EAAAW,QAPAC,GAoBA,SAAAH,EAAAf,GAEA,MAAAmB,EAAA7B,SAAAC,cAAA,8BAEA4B,GACAA,EAAAC,UAAAC,OAAA,6BAIArB,EAAAC,OAAAmB,UAAAE,IAAA,6BACAxB,EAAAK,MAAAH,EAAAC,OAAAsB,QAAAC,OAnCA7B,EAAAmB,iBAAA,SAAAf,GACAH,EAAAgB,QAAAlB,GAAAA,EAAAoB,iBAAA,SAAAf,KAfA,GCAA,WACA,MAAA0B,EAAAnC,SAAAC,cAAA,eAEA,GAAAkC,EAAA,CACA,MAAAC,EAAApC,SAAAC,cAAA,SACAoC,EAAArC,SAAAC,cAAA,iBACA,IAAAqC,EAAA,GAyBA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAhB,QAAAmB,IACA,MAAAC,EAAA1C,SAAA2C,cAAA,MACAD,EAAAZ,UAAAE,IAAA,mBACAU,EAAAF,YAAAC,EACAC,EAAAE,WAAAC,EACAT,EAAAU,YAAAJ,GAEAK,MAIA,SAAAF,EAAAnC,GACAA,EAAAC,OAAAoB,SACAO,EAAAA,EAAAU,OAAAP,GAAAA,IAAA/B,EAAAC,OAAA6B,aACAO,IAGA,SAAAA,IACAV,EAAAxB,MAAAyB,EAAAW,WA1CA,KAAAZ,EAAAxB,QACAyB,EAAAD,EAAAxB,MAAAqC,MAAA,KACAX,KAIAJ,EAAAX,iBAAA,YAEA,SAAAd,GACA,GAAA,KAAAA,EAAAyC,QAAA,CACA,GAAA,KAAAzC,EAAAC,OAAAE,MAAAuC,QAAA1C,EAAAC,OAAAE,MAAA,EACA,OAGAH,EAAA2C,iBACAf,EAAA,IAAAA,EAAA5B,EAAAC,OAAAE,MAAAuC,QACAjB,EAAAtB,MAAA,GAEA0B,SA3BA","file":"bundle.js","sourcesContent":["'use strict';\n\n(function () {\n  const horas = document.querySelector('#horas');\n\n  if (horas) {\n    let busqueda = {\n      categoria_id: '',\n      dia: ''\n    }\n\n    const categoria = document.querySelector('[name=\"categoria_id\"]');\n    const dias = document.querySelectorAll('[name=\"dia\"]');\n    const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n    const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n    categoria.addEventListener('change', terminoBusqueda);\n    dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\n\n    function terminoBusqueda(e) {\n      busqueda[ e.target.name ] = e.target.value;\n      buscarEventos();\n    }\n\n    async function buscarEventos() {\n      const { categoria_id, dia } = busqueda;\n      const url = `/api/eventos-horario?categoria_id=${categoria_id}&dia_id=${dia}`;\n      const resultado = await fetch(url);\n      const eventos = await resultado.json();\n\n      obtenerHorasDisponibles(eventos);\n    }\n\n    function obtenerHorasDisponibles(eventos) {\n      // Comprobar eventos ya tomados y deshabilitar ese horario\n      const horasTomadas = eventos.map(evento => evento.hora_id);\n      const listadoHoras = document.querySelectorAll('#horas li');\n      const horasDisponibles = document.querySelectorAll('#horas li');\n      horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\n    }\n\n    function seleccionarHora(e) {\n      // Deshabilitar selección anterior\n      const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n\n      if (horaPrevia) {\n        horaPrevia.classList.remove('horas__hora--seleccionada');\n      }\n\n      //Agregar clase a hora seleccionada\n      e.target.classList.add('horas__hora--seleccionada');\n      inputHiddenHora.value = e.target.dataset.horaId;\n    }\n  }\n})();\n"," 'use strict';\n\n(function () {\n  const tagsInput = document.querySelector('#tags-input');\n\n  if (tagsInput) {\n    const tagsDiv = document.querySelector('#tags');\n    const tagsInputHidden = document.querySelector('[name=\"tags\"]');\n    let tags = [];\n\n    // Recuperar tags del input oculto para mostrar en vista de edición\n    if (tagsInputHidden.value !== '') {\n      tags = tagsInputHidden.value.split(',');\n      mostrarTags();\n    }\n\n    // Escuchar cambios en el input\n    tagsInput.addEventListener('keypress', guardarTag);\n\n    function guardarTag(e) {\n      if (e.keyCode === 44) {\n        if (e.target.value.trim() === '' || e.target.value < 1) {\n          return;\n        }\n\n        e.preventDefault();\n        tags = [ ...tags, e.target.value.trim() ];\n        tagsInput.value = '';\n\n        mostrarTags();\n      }\n    }\n\n    function mostrarTags() {\n      tagsDiv.textContent = '';\n      tags.forEach(tag => {\n        const etiqueta = document.createElement('LI');\n        etiqueta.classList.add('formulario__tag');\n        etiqueta.textContent = tag;\n        etiqueta.ondblclick = eliminarTag;\n        tagsDiv.appendChild(etiqueta);\n\n        actualizarInputHidden();\n      });\n    }\n\n    function eliminarTag(e) {\n      e.target.remove();\n      tags = tags.filter(tag => tag !== e.target.textContent);\n      actualizarInputHidden();\n    }\n\n    function actualizarInputHidden() {\n      tagsInputHidden.value = tags.toString();\n    }\n  }\n})();\n"]}